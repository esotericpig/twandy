plugins {
  id 'application'
}

project.ext {
  javaVersion = 17
  appName = 'twandy'
  mainClassName = 'tv.twitch.tandycakes.Twandy'
}

compileJava {
  options.release.set(project.javaVersion)
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.+'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.+'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.+'

  implementation 'com.github.gikkman:Java-Twirk:0.7.+' // Twitch IRC.
  implementation 'com.github.esotericpig:jeso:0.3.10'

  //implementation fileTree(dir: 'libs', include: ['**/*.jar'])
}

application {
  mainClass.set(project.mainClassName)
  applicationName project.appName
}

tasks.named('test') {
  useJUnitPlatform()
}

// Build a runnable fat/uber jar.
jar {
  archiveBaseName.set(project.appName)

  manifest {
    attributes 'Main-Class': project.mainClassName
    attributes 'Class-Path': configurations.runtimeClasspath.collect {
      it.getName()
    }.join(' ')
  }

  from {
    configurations.runtimeClasspath.collect {
      def tree = it.isDirectory() ? fileTree(it) : zipTree(it)

      tree.matching {
        // Include only the essential files.
        //include '**/*.class', '**/*.java', '**/resources/'

        // Exclude Javadoc/files in root and META-INF.
        exclude '*', 'META-INF/'
      }
    }
  }

  // Add static files.
  from("$rootDir/") {
    include 'COPYING*', 'README*'
  }
}

run {
  // Must set this for stdin to work with "gradle run"!
  standardInput = System.in
}
